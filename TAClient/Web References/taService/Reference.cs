//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace TAClient.taService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="taServiceSoap", Namespace="http://tempuri.org/")]
    public partial class taService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback dbCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbCategoryUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbCategoryInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbCategoryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbUnitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbUnitUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbUnitInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbUnitDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbPlanListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbPlanUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbPlanInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbPlanDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbProductUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbProductInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbProductDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbSaleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbSaleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbSaleInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbSaleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbPaymentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback dbRetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalePlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeRetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeRhytmOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeSeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvgPriceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public taService() {
            this.Url = global::TAClient.Properties.Settings.Default.TAClient_taService_taService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event dbCategoryListCompletedEventHandler dbCategoryListCompleted;
        
        /// <remarks/>
        public event dbCategoryUpdateCompletedEventHandler dbCategoryUpdateCompleted;
        
        /// <remarks/>
        public event dbCategoryInsertCompletedEventHandler dbCategoryInsertCompleted;
        
        /// <remarks/>
        public event dbCategoryDeleteCompletedEventHandler dbCategoryDeleteCompleted;
        
        /// <remarks/>
        public event dbUnitListCompletedEventHandler dbUnitListCompleted;
        
        /// <remarks/>
        public event dbUnitUpdateCompletedEventHandler dbUnitUpdateCompleted;
        
        /// <remarks/>
        public event dbUnitInsertCompletedEventHandler dbUnitInsertCompleted;
        
        /// <remarks/>
        public event dbUnitDeleteCompletedEventHandler dbUnitDeleteCompleted;
        
        /// <remarks/>
        public event dbPlanListCompletedEventHandler dbPlanListCompleted;
        
        /// <remarks/>
        public event dbPlanUpdateCompletedEventHandler dbPlanUpdateCompleted;
        
        /// <remarks/>
        public event dbPlanInsertCompletedEventHandler dbPlanInsertCompleted;
        
        /// <remarks/>
        public event dbPlanDeleteCompletedEventHandler dbPlanDeleteCompleted;
        
        /// <remarks/>
        public event dbProductListCompletedEventHandler dbProductListCompleted;
        
        /// <remarks/>
        public event dbProductUpdateCompletedEventHandler dbProductUpdateCompleted;
        
        /// <remarks/>
        public event dbProductInsertCompletedEventHandler dbProductInsertCompleted;
        
        /// <remarks/>
        public event dbProductDeleteCompletedEventHandler dbProductDeleteCompleted;
        
        /// <remarks/>
        public event dbSaleListCompletedEventHandler dbSaleListCompleted;
        
        /// <remarks/>
        public event dbSaleUpdateCompletedEventHandler dbSaleUpdateCompleted;
        
        /// <remarks/>
        public event dbSaleInsertCompletedEventHandler dbSaleInsertCompleted;
        
        /// <remarks/>
        public event dbSaleDeleteCompletedEventHandler dbSaleDeleteCompleted;
        
        /// <remarks/>
        public event dbPaymentListCompletedEventHandler dbPaymentListCompleted;
        
        /// <remarks/>
        public event dbRetailListCompletedEventHandler dbRetailListCompleted;
        
        /// <remarks/>
        public event GetYearListCompletedEventHandler GetYearListCompleted;
        
        /// <remarks/>
        public event GetSalePlanCompletedEventHandler GetSalePlanCompleted;
        
        /// <remarks/>
        public event GetTradeCompletedEventHandler GetTradeCompleted;
        
        /// <remarks/>
        public event GetTradePaymentCompletedEventHandler GetTradePaymentCompleted;
        
        /// <remarks/>
        public event GetTradeRetailCompletedEventHandler GetTradeRetailCompleted;
        
        /// <remarks/>
        public event GetTradeStructureCompletedEventHandler GetTradeStructureCompleted;
        
        /// <remarks/>
        public event GetTradeRhytmCompletedEventHandler GetTradeRhytmCompleted;
        
        /// <remarks/>
        public event GetTradeSeasonCompletedEventHandler GetTradeSeasonCompleted;
        
        /// <remarks/>
        public event GetAvgPriceCompletedEventHandler GetAvgPriceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbCategoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbCategoryList() {
            object[] results = this.Invoke("dbCategoryList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbCategoryListAsync() {
            this.dbCategoryListAsync(null);
        }
        
        /// <remarks/>
        public void dbCategoryListAsync(object userState) {
            if ((this.dbCategoryListOperationCompleted == null)) {
                this.dbCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbCategoryListOperationCompleted);
            }
            this.InvokeAsync("dbCategoryList", new object[0], this.dbCategoryListOperationCompleted, userState);
        }
        
        private void OndbCategoryListOperationCompleted(object arg) {
            if ((this.dbCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbCategoryListCompleted(this, new dbCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbCategoryUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbCategoryUpdate(string name, int id) {
            object[] results = this.Invoke("dbCategoryUpdate", new object[] {
                        name,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbCategoryUpdateAsync(string name, int id) {
            this.dbCategoryUpdateAsync(name, id, null);
        }
        
        /// <remarks/>
        public void dbCategoryUpdateAsync(string name, int id, object userState) {
            if ((this.dbCategoryUpdateOperationCompleted == null)) {
                this.dbCategoryUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbCategoryUpdateOperationCompleted);
            }
            this.InvokeAsync("dbCategoryUpdate", new object[] {
                        name,
                        id}, this.dbCategoryUpdateOperationCompleted, userState);
        }
        
        private void OndbCategoryUpdateOperationCompleted(object arg) {
            if ((this.dbCategoryUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbCategoryUpdateCompleted(this, new dbCategoryUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbCategoryInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbCategoryInsert(string name) {
            object[] results = this.Invoke("dbCategoryInsert", new object[] {
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbCategoryInsertAsync(string name) {
            this.dbCategoryInsertAsync(name, null);
        }
        
        /// <remarks/>
        public void dbCategoryInsertAsync(string name, object userState) {
            if ((this.dbCategoryInsertOperationCompleted == null)) {
                this.dbCategoryInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbCategoryInsertOperationCompleted);
            }
            this.InvokeAsync("dbCategoryInsert", new object[] {
                        name}, this.dbCategoryInsertOperationCompleted, userState);
        }
        
        private void OndbCategoryInsertOperationCompleted(object arg) {
            if ((this.dbCategoryInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbCategoryInsertCompleted(this, new dbCategoryInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbCategoryDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbCategoryDelete(int id) {
            object[] results = this.Invoke("dbCategoryDelete", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbCategoryDeleteAsync(int id) {
            this.dbCategoryDeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void dbCategoryDeleteAsync(int id, object userState) {
            if ((this.dbCategoryDeleteOperationCompleted == null)) {
                this.dbCategoryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbCategoryDeleteOperationCompleted);
            }
            this.InvokeAsync("dbCategoryDelete", new object[] {
                        id}, this.dbCategoryDeleteOperationCompleted, userState);
        }
        
        private void OndbCategoryDeleteOperationCompleted(object arg) {
            if ((this.dbCategoryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbCategoryDeleteCompleted(this, new dbCategoryDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbUnitList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbUnitList() {
            object[] results = this.Invoke("dbUnitList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbUnitListAsync() {
            this.dbUnitListAsync(null);
        }
        
        /// <remarks/>
        public void dbUnitListAsync(object userState) {
            if ((this.dbUnitListOperationCompleted == null)) {
                this.dbUnitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbUnitListOperationCompleted);
            }
            this.InvokeAsync("dbUnitList", new object[0], this.dbUnitListOperationCompleted, userState);
        }
        
        private void OndbUnitListOperationCompleted(object arg) {
            if ((this.dbUnitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbUnitListCompleted(this, new dbUnitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbUnitUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbUnitUpdate(string name, int id) {
            object[] results = this.Invoke("dbUnitUpdate", new object[] {
                        name,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbUnitUpdateAsync(string name, int id) {
            this.dbUnitUpdateAsync(name, id, null);
        }
        
        /// <remarks/>
        public void dbUnitUpdateAsync(string name, int id, object userState) {
            if ((this.dbUnitUpdateOperationCompleted == null)) {
                this.dbUnitUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbUnitUpdateOperationCompleted);
            }
            this.InvokeAsync("dbUnitUpdate", new object[] {
                        name,
                        id}, this.dbUnitUpdateOperationCompleted, userState);
        }
        
        private void OndbUnitUpdateOperationCompleted(object arg) {
            if ((this.dbUnitUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbUnitUpdateCompleted(this, new dbUnitUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbUnitInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbUnitInsert(string name) {
            object[] results = this.Invoke("dbUnitInsert", new object[] {
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbUnitInsertAsync(string name) {
            this.dbUnitInsertAsync(name, null);
        }
        
        /// <remarks/>
        public void dbUnitInsertAsync(string name, object userState) {
            if ((this.dbUnitInsertOperationCompleted == null)) {
                this.dbUnitInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbUnitInsertOperationCompleted);
            }
            this.InvokeAsync("dbUnitInsert", new object[] {
                        name}, this.dbUnitInsertOperationCompleted, userState);
        }
        
        private void OndbUnitInsertOperationCompleted(object arg) {
            if ((this.dbUnitInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbUnitInsertCompleted(this, new dbUnitInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbUnitDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbUnitDelete(int id) {
            object[] results = this.Invoke("dbUnitDelete", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbUnitDeleteAsync(int id) {
            this.dbUnitDeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void dbUnitDeleteAsync(int id, object userState) {
            if ((this.dbUnitDeleteOperationCompleted == null)) {
                this.dbUnitDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbUnitDeleteOperationCompleted);
            }
            this.InvokeAsync("dbUnitDelete", new object[] {
                        id}, this.dbUnitDeleteOperationCompleted, userState);
        }
        
        private void OndbUnitDeleteOperationCompleted(object arg) {
            if ((this.dbUnitDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbUnitDeleteCompleted(this, new dbUnitDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbPlanList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbPlanList() {
            object[] results = this.Invoke("dbPlanList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbPlanListAsync() {
            this.dbPlanListAsync(null);
        }
        
        /// <remarks/>
        public void dbPlanListAsync(object userState) {
            if ((this.dbPlanListOperationCompleted == null)) {
                this.dbPlanListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbPlanListOperationCompleted);
            }
            this.InvokeAsync("dbPlanList", new object[0], this.dbPlanListOperationCompleted, userState);
        }
        
        private void OndbPlanListOperationCompleted(object arg) {
            if ((this.dbPlanListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbPlanListCompleted(this, new dbPlanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbPlanUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbPlanUpdate(decimal summa, int year, int month) {
            object[] results = this.Invoke("dbPlanUpdate", new object[] {
                        summa,
                        year,
                        month});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbPlanUpdateAsync(decimal summa, int year, int month) {
            this.dbPlanUpdateAsync(summa, year, month, null);
        }
        
        /// <remarks/>
        public void dbPlanUpdateAsync(decimal summa, int year, int month, object userState) {
            if ((this.dbPlanUpdateOperationCompleted == null)) {
                this.dbPlanUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbPlanUpdateOperationCompleted);
            }
            this.InvokeAsync("dbPlanUpdate", new object[] {
                        summa,
                        year,
                        month}, this.dbPlanUpdateOperationCompleted, userState);
        }
        
        private void OndbPlanUpdateOperationCompleted(object arg) {
            if ((this.dbPlanUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbPlanUpdateCompleted(this, new dbPlanUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbPlanInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbPlanInsert(decimal summa, int year, int month) {
            object[] results = this.Invoke("dbPlanInsert", new object[] {
                        summa,
                        year,
                        month});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbPlanInsertAsync(decimal summa, int year, int month) {
            this.dbPlanInsertAsync(summa, year, month, null);
        }
        
        /// <remarks/>
        public void dbPlanInsertAsync(decimal summa, int year, int month, object userState) {
            if ((this.dbPlanInsertOperationCompleted == null)) {
                this.dbPlanInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbPlanInsertOperationCompleted);
            }
            this.InvokeAsync("dbPlanInsert", new object[] {
                        summa,
                        year,
                        month}, this.dbPlanInsertOperationCompleted, userState);
        }
        
        private void OndbPlanInsertOperationCompleted(object arg) {
            if ((this.dbPlanInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbPlanInsertCompleted(this, new dbPlanInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbPlanDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbPlanDelete(int year, int month) {
            object[] results = this.Invoke("dbPlanDelete", new object[] {
                        year,
                        month});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbPlanDeleteAsync(int year, int month) {
            this.dbPlanDeleteAsync(year, month, null);
        }
        
        /// <remarks/>
        public void dbPlanDeleteAsync(int year, int month, object userState) {
            if ((this.dbPlanDeleteOperationCompleted == null)) {
                this.dbPlanDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbPlanDeleteOperationCompleted);
            }
            this.InvokeAsync("dbPlanDelete", new object[] {
                        year,
                        month}, this.dbPlanDeleteOperationCompleted, userState);
        }
        
        private void OndbPlanDeleteOperationCompleted(object arg) {
            if ((this.dbPlanDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbPlanDeleteCompleted(this, new dbPlanDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbProductList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbProductList() {
            object[] results = this.Invoke("dbProductList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbProductListAsync() {
            this.dbProductListAsync(null);
        }
        
        /// <remarks/>
        public void dbProductListAsync(object userState) {
            if ((this.dbProductListOperationCompleted == null)) {
                this.dbProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbProductListOperationCompleted);
            }
            this.InvokeAsync("dbProductList", new object[0], this.dbProductListOperationCompleted, userState);
        }
        
        private void OndbProductListOperationCompleted(object arg) {
            if ((this.dbProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbProductListCompleted(this, new dbProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbProductUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbProductUpdate(string name, int category, int unit, int id) {
            object[] results = this.Invoke("dbProductUpdate", new object[] {
                        name,
                        category,
                        unit,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbProductUpdateAsync(string name, int category, int unit, int id) {
            this.dbProductUpdateAsync(name, category, unit, id, null);
        }
        
        /// <remarks/>
        public void dbProductUpdateAsync(string name, int category, int unit, int id, object userState) {
            if ((this.dbProductUpdateOperationCompleted == null)) {
                this.dbProductUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbProductUpdateOperationCompleted);
            }
            this.InvokeAsync("dbProductUpdate", new object[] {
                        name,
                        category,
                        unit,
                        id}, this.dbProductUpdateOperationCompleted, userState);
        }
        
        private void OndbProductUpdateOperationCompleted(object arg) {
            if ((this.dbProductUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbProductUpdateCompleted(this, new dbProductUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbProductInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbProductInsert(string name, int category, int unit) {
            object[] results = this.Invoke("dbProductInsert", new object[] {
                        name,
                        category,
                        unit});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbProductInsertAsync(string name, int category, int unit) {
            this.dbProductInsertAsync(name, category, unit, null);
        }
        
        /// <remarks/>
        public void dbProductInsertAsync(string name, int category, int unit, object userState) {
            if ((this.dbProductInsertOperationCompleted == null)) {
                this.dbProductInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbProductInsertOperationCompleted);
            }
            this.InvokeAsync("dbProductInsert", new object[] {
                        name,
                        category,
                        unit}, this.dbProductInsertOperationCompleted, userState);
        }
        
        private void OndbProductInsertOperationCompleted(object arg) {
            if ((this.dbProductInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbProductInsertCompleted(this, new dbProductInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbProductDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbProductDelete(int id) {
            object[] results = this.Invoke("dbProductDelete", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbProductDeleteAsync(int id) {
            this.dbProductDeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void dbProductDeleteAsync(int id, object userState) {
            if ((this.dbProductDeleteOperationCompleted == null)) {
                this.dbProductDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbProductDeleteOperationCompleted);
            }
            this.InvokeAsync("dbProductDelete", new object[] {
                        id}, this.dbProductDeleteOperationCompleted, userState);
        }
        
        private void OndbProductDeleteOperationCompleted(object arg) {
            if ((this.dbProductDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbProductDeleteCompleted(this, new dbProductDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbSaleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbSaleList() {
            object[] results = this.Invoke("dbSaleList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbSaleListAsync() {
            this.dbSaleListAsync(null);
        }
        
        /// <remarks/>
        public void dbSaleListAsync(object userState) {
            if ((this.dbSaleListOperationCompleted == null)) {
                this.dbSaleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbSaleListOperationCompleted);
            }
            this.InvokeAsync("dbSaleList", new object[0], this.dbSaleListOperationCompleted, userState);
        }
        
        private void OndbSaleListOperationCompleted(object arg) {
            if ((this.dbSaleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbSaleListCompleted(this, new dbSaleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbSaleUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbSaleUpdate(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail, int id) {
            object[] results = this.Invoke("dbSaleUpdate", new object[] {
                        dates,
                        product,
                        quantity,
                        summa,
                        payment,
                        retail,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbSaleUpdateAsync(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail, int id) {
            this.dbSaleUpdateAsync(dates, product, quantity, summa, payment, retail, id, null);
        }
        
        /// <remarks/>
        public void dbSaleUpdateAsync(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail, int id, object userState) {
            if ((this.dbSaleUpdateOperationCompleted == null)) {
                this.dbSaleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbSaleUpdateOperationCompleted);
            }
            this.InvokeAsync("dbSaleUpdate", new object[] {
                        dates,
                        product,
                        quantity,
                        summa,
                        payment,
                        retail,
                        id}, this.dbSaleUpdateOperationCompleted, userState);
        }
        
        private void OndbSaleUpdateOperationCompleted(object arg) {
            if ((this.dbSaleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbSaleUpdateCompleted(this, new dbSaleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbSaleInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbSaleInsert(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail) {
            object[] results = this.Invoke("dbSaleInsert", new object[] {
                        dates,
                        product,
                        quantity,
                        summa,
                        payment,
                        retail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbSaleInsertAsync(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail) {
            this.dbSaleInsertAsync(dates, product, quantity, summa, payment, retail, null);
        }
        
        /// <remarks/>
        public void dbSaleInsertAsync(System.DateTime dates, int product, int quantity, decimal summa, int payment, int retail, object userState) {
            if ((this.dbSaleInsertOperationCompleted == null)) {
                this.dbSaleInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbSaleInsertOperationCompleted);
            }
            this.InvokeAsync("dbSaleInsert", new object[] {
                        dates,
                        product,
                        quantity,
                        summa,
                        payment,
                        retail}, this.dbSaleInsertOperationCompleted, userState);
        }
        
        private void OndbSaleInsertOperationCompleted(object arg) {
            if ((this.dbSaleInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbSaleInsertCompleted(this, new dbSaleInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbSaleDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int dbSaleDelete(int id) {
            object[] results = this.Invoke("dbSaleDelete", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void dbSaleDeleteAsync(int id) {
            this.dbSaleDeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void dbSaleDeleteAsync(int id, object userState) {
            if ((this.dbSaleDeleteOperationCompleted == null)) {
                this.dbSaleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbSaleDeleteOperationCompleted);
            }
            this.InvokeAsync("dbSaleDelete", new object[] {
                        id}, this.dbSaleDeleteOperationCompleted, userState);
        }
        
        private void OndbSaleDeleteOperationCompleted(object arg) {
            if ((this.dbSaleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbSaleDeleteCompleted(this, new dbSaleDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbPaymentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbPaymentList() {
            object[] results = this.Invoke("dbPaymentList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbPaymentListAsync() {
            this.dbPaymentListAsync(null);
        }
        
        /// <remarks/>
        public void dbPaymentListAsync(object userState) {
            if ((this.dbPaymentListOperationCompleted == null)) {
                this.dbPaymentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbPaymentListOperationCompleted);
            }
            this.InvokeAsync("dbPaymentList", new object[0], this.dbPaymentListOperationCompleted, userState);
        }
        
        private void OndbPaymentListOperationCompleted(object arg) {
            if ((this.dbPaymentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbPaymentListCompleted(this, new dbPaymentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dbRetailList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable dbRetailList() {
            object[] results = this.Invoke("dbRetailList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void dbRetailListAsync() {
            this.dbRetailListAsync(null);
        }
        
        /// <remarks/>
        public void dbRetailListAsync(object userState) {
            if ((this.dbRetailListOperationCompleted == null)) {
                this.dbRetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndbRetailListOperationCompleted);
            }
            this.InvokeAsync("dbRetailList", new object[0], this.dbRetailListOperationCompleted, userState);
        }
        
        private void OndbRetailListOperationCompleted(object arg) {
            if ((this.dbRetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dbRetailListCompleted(this, new dbRetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYearList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetYearList() {
            object[] results = this.Invoke("GetYearList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearListAsync() {
            this.GetYearListAsync(null);
        }
        
        /// <remarks/>
        public void GetYearListAsync(object userState) {
            if ((this.GetYearListOperationCompleted == null)) {
                this.GetYearListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearListOperationCompleted);
            }
            this.InvokeAsync("GetYearList", new object[0], this.GetYearListOperationCompleted, userState);
        }
        
        private void OnGetYearListOperationCompleted(object arg) {
            if ((this.GetYearListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearListCompleted(this, new GetYearListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSalePlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSalePlan(int year) {
            object[] results = this.Invoke("GetSalePlan", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalePlanAsync(int year) {
            this.GetSalePlanAsync(year, null);
        }
        
        /// <remarks/>
        public void GetSalePlanAsync(int year, object userState) {
            if ((this.GetSalePlanOperationCompleted == null)) {
                this.GetSalePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalePlanOperationCompleted);
            }
            this.InvokeAsync("GetSalePlan", new object[] {
                        year}, this.GetSalePlanOperationCompleted, userState);
        }
        
        private void OnGetSalePlanOperationCompleted(object arg) {
            if ((this.GetSalePlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalePlanCompleted(this, new GetSalePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTrade(int year) {
            object[] results = this.Invoke("GetTrade", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeAsync(int year) {
            this.GetTradeAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradeAsync(int year, object userState) {
            if ((this.GetTradeOperationCompleted == null)) {
                this.GetTradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeOperationCompleted);
            }
            this.InvokeAsync("GetTrade", new object[] {
                        year}, this.GetTradeOperationCompleted, userState);
        }
        
        private void OnGetTradeOperationCompleted(object arg) {
            if ((this.GetTradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeCompleted(this, new GetTradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTradePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTradePayment(int year) {
            object[] results = this.Invoke("GetTradePayment", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradePaymentAsync(int year) {
            this.GetTradePaymentAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradePaymentAsync(int year, object userState) {
            if ((this.GetTradePaymentOperationCompleted == null)) {
                this.GetTradePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradePaymentOperationCompleted);
            }
            this.InvokeAsync("GetTradePayment", new object[] {
                        year}, this.GetTradePaymentOperationCompleted, userState);
        }
        
        private void OnGetTradePaymentOperationCompleted(object arg) {
            if ((this.GetTradePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradePaymentCompleted(this, new GetTradePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTradeRetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTradeRetail(int year) {
            object[] results = this.Invoke("GetTradeRetail", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeRetailAsync(int year) {
            this.GetTradeRetailAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradeRetailAsync(int year, object userState) {
            if ((this.GetTradeRetailOperationCompleted == null)) {
                this.GetTradeRetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeRetailOperationCompleted);
            }
            this.InvokeAsync("GetTradeRetail", new object[] {
                        year}, this.GetTradeRetailOperationCompleted, userState);
        }
        
        private void OnGetTradeRetailOperationCompleted(object arg) {
            if ((this.GetTradeRetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeRetailCompleted(this, new GetTradeRetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTradeStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTradeStructure(int year) {
            object[] results = this.Invoke("GetTradeStructure", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeStructureAsync(int year) {
            this.GetTradeStructureAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradeStructureAsync(int year, object userState) {
            if ((this.GetTradeStructureOperationCompleted == null)) {
                this.GetTradeStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeStructureOperationCompleted);
            }
            this.InvokeAsync("GetTradeStructure", new object[] {
                        year}, this.GetTradeStructureOperationCompleted, userState);
        }
        
        private void OnGetTradeStructureOperationCompleted(object arg) {
            if ((this.GetTradeStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeStructureCompleted(this, new GetTradeStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTradeRhytm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTradeRhytm(int year) {
            object[] results = this.Invoke("GetTradeRhytm", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeRhytmAsync(int year) {
            this.GetTradeRhytmAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradeRhytmAsync(int year, object userState) {
            if ((this.GetTradeRhytmOperationCompleted == null)) {
                this.GetTradeRhytmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeRhytmOperationCompleted);
            }
            this.InvokeAsync("GetTradeRhytm", new object[] {
                        year}, this.GetTradeRhytmOperationCompleted, userState);
        }
        
        private void OnGetTradeRhytmOperationCompleted(object arg) {
            if ((this.GetTradeRhytmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeRhytmCompleted(this, new GetTradeRhytmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTradeSeason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTradeSeason(int year) {
            object[] results = this.Invoke("GetTradeSeason", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeSeasonAsync(int year) {
            this.GetTradeSeasonAsync(year, null);
        }
        
        /// <remarks/>
        public void GetTradeSeasonAsync(int year, object userState) {
            if ((this.GetTradeSeasonOperationCompleted == null)) {
                this.GetTradeSeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeSeasonOperationCompleted);
            }
            this.InvokeAsync("GetTradeSeason", new object[] {
                        year}, this.GetTradeSeasonOperationCompleted, userState);
        }
        
        private void OnGetTradeSeasonOperationCompleted(object arg) {
            if ((this.GetTradeSeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeSeasonCompleted(this, new GetTradeSeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvgPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAvgPrice(int year) {
            object[] results = this.Invoke("GetAvgPrice", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvgPriceAsync(int year) {
            this.GetAvgPriceAsync(year, null);
        }
        
        /// <remarks/>
        public void GetAvgPriceAsync(int year, object userState) {
            if ((this.GetAvgPriceOperationCompleted == null)) {
                this.GetAvgPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvgPriceOperationCompleted);
            }
            this.InvokeAsync("GetAvgPrice", new object[] {
                        year}, this.GetAvgPriceOperationCompleted, userState);
        }
        
        private void OnGetAvgPriceOperationCompleted(object arg) {
            if ((this.GetAvgPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvgPriceCompleted(this, new GetAvgPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbCategoryListCompletedEventHandler(object sender, dbCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbCategoryUpdateCompletedEventHandler(object sender, dbCategoryUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbCategoryUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbCategoryUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbCategoryInsertCompletedEventHandler(object sender, dbCategoryInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbCategoryInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbCategoryInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbCategoryDeleteCompletedEventHandler(object sender, dbCategoryDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbCategoryDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbCategoryDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbUnitListCompletedEventHandler(object sender, dbUnitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbUnitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbUnitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbUnitUpdateCompletedEventHandler(object sender, dbUnitUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbUnitUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbUnitUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbUnitInsertCompletedEventHandler(object sender, dbUnitInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbUnitInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbUnitInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbUnitDeleteCompletedEventHandler(object sender, dbUnitDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbUnitDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbUnitDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbPlanListCompletedEventHandler(object sender, dbPlanListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbPlanListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbPlanListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbPlanUpdateCompletedEventHandler(object sender, dbPlanUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbPlanUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbPlanUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbPlanInsertCompletedEventHandler(object sender, dbPlanInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbPlanInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbPlanInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbPlanDeleteCompletedEventHandler(object sender, dbPlanDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbPlanDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbPlanDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbProductListCompletedEventHandler(object sender, dbProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbProductUpdateCompletedEventHandler(object sender, dbProductUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbProductUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbProductUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbProductInsertCompletedEventHandler(object sender, dbProductInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbProductInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbProductInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbProductDeleteCompletedEventHandler(object sender, dbProductDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbProductDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbProductDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbSaleListCompletedEventHandler(object sender, dbSaleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbSaleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbSaleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbSaleUpdateCompletedEventHandler(object sender, dbSaleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbSaleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbSaleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbSaleInsertCompletedEventHandler(object sender, dbSaleInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbSaleInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbSaleInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbSaleDeleteCompletedEventHandler(object sender, dbSaleDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbSaleDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbSaleDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbPaymentListCompletedEventHandler(object sender, dbPaymentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbPaymentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbPaymentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dbRetailListCompletedEventHandler(object sender, dbRetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dbRetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dbRetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetYearListCompletedEventHandler(object sender, GetYearListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSalePlanCompletedEventHandler(object sender, GetSalePlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradeCompletedEventHandler(object sender, GetTradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradePaymentCompletedEventHandler(object sender, GetTradePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradeRetailCompletedEventHandler(object sender, GetTradeRetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeRetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeRetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradeStructureCompletedEventHandler(object sender, GetTradeStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradeRhytmCompletedEventHandler(object sender, GetTradeRhytmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeRhytmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeRhytmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTradeSeasonCompletedEventHandler(object sender, GetTradeSeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeSeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeSeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAvgPriceCompletedEventHandler(object sender, GetAvgPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvgPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvgPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591